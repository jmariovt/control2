
    $('.drag').draggable({ 
        appendTo: 'body',
        helper: 'clone'
    });

    $('#dropzone').droppable({
        activeClass: 'activeAplicacion',
        hoverClass: 'hover',
        accept: ":not(.ui-sortable-helper)", // Reject clones generated by sortable
        drop: function (e, ui) {
            //var $el = $('<div class="drop-item"><details><summary>' + ui.draggable.text() + '</summary></details></div>');
            //$el.append($('<button type="button" class="btn btn-default btn-xs remove"><span class="bi bi-trash"></span></button>').click(function () { $(this).parent().detach(); }));
            var texto= ui.draggable.text();
            var codigo = texto.split('; Cod.')[1];
            var encontrado = 0;
            console.log('Hola '+texto);
            $('#aplicacionesDisponibles > input').each(function(){
                var comparar = $(this).val().split('; Cod.')[1];
                console.log(comparar);
                if(codigo==comparar)
                    encontrado=1;
            });
            if(encontrado==0)
            {
                var $el = $('<div class="input-group mb-3"><input type="text" disabled class="form-control" value="'+ui.draggable.text()+'" aria-describedby="button-addon2">');
                $el.append($('<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>').click(function () { $(this).parent().detach(); }));
                $(this).append($el);
            }
            
        }
        }).sortable({
            items: '.drop-item',
            sort: function() {
                // gets added unintentionally by droppable interacting with sortable
                // using connectWithSortable fixes this, but doesn't allow you to customize active/hoverClass options
                $( this ).removeClass( "active" );
            }
    });